{"version":3,"sources":["components/Card.js","components/Gameboard.js","components/Header.js","App.js","index.js"],"names":["Card","card","onClick","className","id","img","text","Gameboard","cards","map","Header","title","score","highScore","defaultProps","App","useState","setCards","setScore","setHighScore","selectedIDs","setSelectedIDs","useEffect","includes","shuffledCards","i","length","splice","Math","floor","random","shufflCards","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAWeA,EAXF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAElB,OACI,sBAAKC,UAAU,OAAOD,QAAS,kBAAMA,EAAQD,EAAKG,KAAlD,UACI,6BAAKH,EAAKG,KACV,6BAAKH,EAAKI,MACV,4BAAIJ,EAAKK,WCQNC,EAZG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAON,EAAa,EAAbA,QAEvB,OACI,qBAAKC,UAAU,YAAf,SACKK,EAAMC,KAAI,SAACR,GAAD,OACP,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,QAASA,GAA9BD,EAAKG,UCN1BM,EAAS,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,UAE3B,OACI,sBAAKV,UAAU,SAAf,UACI,sBAAKA,UAAU,cAAf,UACI,6BAAKQ,IACL,sJAEJ,sBAAKR,UAAU,gBAAf,UACI,iDAAoBS,KACpB,8CAAiBC,YAMjCH,EAAOI,aAAe,CAClBH,MAAO,kBACPC,MAAO,EACPC,UAAW,GAGAH,QC4FAK,MA9Gf,WAEE,IA0EA,EAA0BC,oBA1EL,WA+DnB,MA9Dc,CACZ,CACEZ,GAAI,EACJC,IAAK,QACLC,KAAM,eAER,CACEF,GAAI,EACJC,IAAK,QACLC,KAAM,eAER,CACEF,GAAI,EACJC,IAAK,QACLC,KAAM,eAER,CACEF,GAAI,EACJC,IAAK,QACLC,KAAM,eAER,CACEF,GAAI,EACJC,IAAK,QACLC,KAAM,eAER,CACEF,GAAI,EACJC,IAAK,QACLC,KAAM,eAER,CACEF,GAAI,EACJC,IAAK,QACLC,KAAM,eAER,CACEF,GAAI,EACJC,IAAK,QACLC,KAAM,eAER,CACEF,GAAI,EACJC,IAAK,QACLC,KAAM,eAER,CACEF,GAAI,GACJC,IAAK,QACLC,KAAM,eAER,CACEF,GAAI,GACJC,IAAK,QACLC,KAAM,eAER,CACEF,GAAI,GACJC,IAAK,QACLC,KAAM,kBAcqC,IAAjD,mBAAOE,EAAP,KAAcS,EAAd,KACA,EAA0BD,mBAAS,GAAnC,mBAAOJ,EAAP,KAAcM,EAAd,KACA,EAAkCF,mBAAS,GAA3C,mBAAOH,EAAP,KAAkBM,EAAlB,KACA,EAAsCH,mBAAS,IAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KAuBA,OANAC,qBAAU,WACLV,EAAQC,GACTM,EAAaP,KAEd,CAACA,IAGF,sBAAKT,UAAU,MAAf,UACE,cAAC,EAAD,CAAQQ,MAAM,mBAAmBC,MAAOA,EAAOC,UAAWA,IAC1D,cAAC,EAAD,CAAWL,MAAOA,EAAON,QApBb,SAACE,GACZgB,EAAYG,SAASnB,IACtBiB,EAAe,IACfH,EAAS,KAETG,EAAe,GAAD,mBAAKD,GAAL,CAAkBhB,KARlCc,EAASN,EAAQ,IAdC,WAElB,IADA,IAAIY,EAAgB,GACZC,EAAIjB,EAAMkB,OAAQD,EAAI,EAAGA,IAC/BD,EAAa,sBAAOA,GAAP,YAAyBhB,EAAMmB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,GAAI,KAEpFR,EAASO,GAoBTO,UC7FJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b685b9e9.chunk.js","sourcesContent":["const Card = ({ card, onClick }) => {\n\n    return (\n        <div className='card' onClick={() => onClick(card.id)}>\n            <h1>{card.id}</h1>\n            <h1>{card.img}</h1>\n            <p>{card.text}</p>\n        </div>\n    )\n}\n\nexport default Card;","import Card from \"./Card\";\n\nconst Gameboard = ({cards, onClick}) => {\n\n    return(\n        <div className='gameboard'>\n            {cards.map((card) => (\n                <Card key={card.id} card={card} onClick={onClick}/>\n            ))}\n        </div>\n\n    )\n}\n\nexport default Gameboard;","\nconst Header = ({title, score, highScore}) => {\n\n    return(\n        <div className='header'>\n            <div className='header-text'>\n                <h1>{title}</h1>\n                <p>The memory card game is all about remembering which cards you have already selected and selecting a unclicked card</p>\n            </div>\n            <div className='heading-score'>\n                <h1>Current Score: {score}</h1>\n                <h1>High Score: {highScore}</h1>\n            </div>\n        </div>\n    );\n};\n\nHeader.defaultProps = {\n    title: \"Defaulted Title\",\n    score: 0,\n    highScore: 0,\n}\n\nexport default Header;","import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport Gameboard from './components/Gameboard';\nimport Header from './components/Header';\n\nfunction App() {\n\n  const getInitCards = () => {\n    let cardSet = [\n      {\n        id: 1,\n        img: 'image',\n        text: 'Sample text'\n      },\n      {\n        id: 2,\n        img: 'image',\n        text: 'Sample text'\n      },\n      {\n        id: 3,\n        img: 'image',\n        text: 'Sample text'\n      },\n      {\n        id: 4,\n        img: 'image',\n        text: 'Sample text'\n      },\n      {\n        id: 5,\n        img: 'image',\n        text: 'Sample text'\n      },\n      {\n        id: 6,\n        img: 'image',\n        text: 'Sample text'\n      },\n      {\n        id: 7,\n        img: 'image',\n        text: 'Sample text'\n      },\n      {\n        id: 8,\n        img: 'image',\n        text: 'Sample text'\n      },\n      {\n        id: 9,\n        img: 'image',\n        text: 'Sample text'\n      },\n      {\n        id: 10,\n        img: 'image',\n        text: 'Sample text'\n      },\n      {\n        id: 11,\n        img: 'image',\n        text: 'Sample text'\n      },\n      {\n        id: 12,\n        img: 'image',\n        text: 'Sample text'\n      },\n    ];\n    return cardSet;\n  }\n\n  const shufflCards = () => {\n    let shuffledCards = [];\n    for(let i = cards.length; i > 0; i--){\n      shuffledCards = [...shuffledCards, ...cards.splice(Math.floor(Math.random() * i), 1)]\n    }\n    setCards(shuffledCards);\n  }\n\n  const [cards, setCards] = useState(getInitCards, []);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [selectedIDs, setSelectedIDs] = useState([]);\n\n  const addPoint = () => {\n    setScore(score + 1);\n  };\n\n  const onClick = (id) => {\n    if(selectedIDs.includes(id)){\n      setSelectedIDs([]);\n      setScore(0);\n    }else{\n      setSelectedIDs([...selectedIDs, id]);\n      addPoint();\n    }\n    shufflCards()\n  };\n\n  useEffect(() => {\n    if(score > highScore){\n      setHighScore(score);\n    };\n  }, [score]);\n\n  return (\n    <div className=\"App\">\n      <Header title=\"DJ's Memory Game\" score={score} highScore={highScore}/>\n      <Gameboard cards={cards} onClick={onClick}/>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}